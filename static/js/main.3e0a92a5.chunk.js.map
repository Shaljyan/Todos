{"version":3,"sources":["logo.svg","components/Loading.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","className","role","TodosList","todos","class","map","todo","title","type","checked","completed","App","useState","setTodos","useEffect","axios","get","then","result","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAAe,I,YCUAA,EARC,WACZ,OACA,qBAAKC,UAAU,8BAA8BC,KAAK,SAAlD,SACA,sBAAMD,UAAU,kBAAhB,2BCKWE,EAVG,SAAC,GAAY,IAAXC,EAAU,EAAVA,MAChB,OAAO,oBAAIC,MAAM,aAAV,SACFD,EAAME,KAAI,SAACC,GAAD,OACX,qBAAIF,MAAM,oEAAV,UACKE,EAAKC,MACN,uBAAOC,KAAK,WAAWC,QAASH,EAAKI,qB,iBCiBlCC,MAff,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNT,EADM,KACCU,EADD,KAQb,OANAC,qBAAW,WACTC,IAAMC,IAAI,8CAA8CC,MAAK,SAACC,GAC9DL,EAASK,EAAOC,WAEf,IAGD,8BACGhB,EAAQ,cAAC,EAAD,CAAWA,MAAOA,IAAU,cAAC,EAAD,OCL5BiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3e0a92a5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nconst Loading = () =>{\r\n    return (\r\n    <div className=\"spinner-border text-primary\" role=\"status\">\r\n    <span className=\"visually-hidden\">Loading...</span>\r\n  </div>\r\n    );\r\n} \r\n\r\nexport default Loading;","const TodosList = ({todos}) =>{\r\n    return <ul class=\"list-group\">\r\n        {todos.map((todo)=> \r\n        <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n            {todo.title}\r\n            <input type=\"checkbox\" checked={todo.completed} />\r\n        </li>)}\r\n    </ul>\r\n} ;\r\n\r\nexport default TodosList;","import logo from './logo.svg';\nimport './App.css';\nimport {useState, useEffect} from \"react\";\nimport Loading from \"./components/Loading\";\nimport TodosList from './components/TodoList';\nimport axios from 'axios';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  useEffect (() =>{\n    axios.get(\"https://jsonplaceholder.typicode.com/todos\").then((result) =>{\n    setTodos(result.data);\n  });\n  }, []);\n  \n  return (\n    <div>\n      {todos ? <TodosList todos={todos}/>: <Loading />}   \n    </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}